{"version":3,"sources":["webpack:///./src/pages/posts.tsx"],"names":["rhythm","typography","Container","Article","Year","Posts","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","lastYear","map","node","frontmatter","fields","slug","currentYear","date","split","trim","Fragment","key","to","query"],"mappings":"yOAQQA,EAAWC,IAAXD,OACFE,EAAY,mBAAH,oBAAG,CAAH,cACCF,EAAO,GADR,KAGTG,EAAU,uBAAH,oBAAG,CAAH,wEAIGH,EAAO,IAJV,IAIkBA,EAAO,GAJzB,+GAkBPI,EAAO,oBAAH,oBAAG,CAAH,+DAISJ,EAAO,IAJhB,KAqCKK,UA/BD,SAAC,GAAuB,IAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACfC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,kBAAkBC,MAEjCC,EAAW,KACf,OACE,YAAC,IAAD,CAAQR,SAAUA,EAAUI,MAAOH,GACjC,YAAC,IAAD,CAAKG,MAAM,UACX,YAACT,EAAD,KACGU,EAAMI,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACNN,EAAQM,EAAKC,YAAYP,OAASM,EAAKE,OAAOC,KAC9CC,EAAcJ,EAAKC,YAAYI,KAAKC,MAAM,KAAK,GAAGC,OACxD,OACE,YAAC,IAAMC,SAAP,CAAgBC,IAAKT,EAAKE,OAAOC,MAC9BC,IAAgBN,IAEbA,EAAWM,EACJ,YAACjB,EAAD,KAAOiB,IAElB,YAAClB,EAAD,KACE,YAAC,OAAD,CAAMwB,GAAIV,EAAKE,OAAOC,MAAOT,GAC7B,yBAAQM,EAAKC,YAAYI,cAYlC,IAAMM,EAAQ","file":"component---src-pages-posts-tsx-78f6dbacde7f73d5132e.js","sourcesContent":["import React from \"react\";\r\nimport { graphql, Link } from \"gatsby\";\r\n\r\nimport Layout from \"../components/layout\";\r\nimport SEO from \"../components/seo\";\r\nimport typography from \"../utils/typography\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst { rhythm } = typography;\r\nconst Container = styled.div`\r\n  margin-top: ${rhythm(1)};\r\n`;\r\nconst Article = styled.article`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 120%;\r\n  margin: 0 0 ${rhythm(0.6)} ${rhythm(2)};\r\n  & a {\r\n    color: unset;\r\n    text-decoration: none;\r\n    &:hover {\r\n      color: cornflowerblue;\r\n    }\r\n  }\r\n  & small {\r\n    opacity: 0.4;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst Year = styled.code`\r\n  font-weight: bold;\r\n  font-size: 120%;\r\n  display: block;\r\n  margin-bottom: ${rhythm(0.6)};\r\n`;\r\nconst Posts = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata.title;\r\n  const posts = data.allMarkdownRemark.edges;\r\n\r\n  let lastYear = null;\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <SEO title=\"Posts\" />\r\n      <Container>\r\n        {posts.map(({ node }) => {\r\n          const title = node.frontmatter.title || node.fields.slug;\r\n          const currentYear = node.frontmatter.date.split(\",\")[1].trim();\r\n          return (\r\n            <React.Fragment key={node.fields.slug}>\r\n              {currentYear !== lastYear &&\r\n                (() => {\r\n                  lastYear = currentYear;\r\n                  return <Year>{currentYear}</Year>;\r\n                })()}\r\n              <Article>\r\n                <Link to={node.fields.slug}>{title}</Link>\r\n                <small>{node.frontmatter.date}</small>\r\n              </Article>\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      </Container>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n\r\nexport const query = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            description\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}