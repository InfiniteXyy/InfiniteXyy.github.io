{"version":3,"sources":["webpack:///./src/components/author.tsx","webpack:///./src/templates/blog-post.tsx"],"names":["rhythm","typography","Container","styled","div","theme","colors","muted","highlight","Author","data","site","siteMetadata","author","name","window","location","href","Article","article","secondary","BottomNav","nav","NavItem","props","align","pageQuery","BlogPostTemplate","pageContext","post","markdownRemark","siteTitle","title","previous","next","frontmatter","description","excerpt","date","dangerouslySetInnerHTML","__html","html","to","fields","slug","rel"],"mappings":"wmBAIQA,EAAWC,IAAXD,OACFE,EAAYC,IAAOC,IAAV,KACW,qBAAGC,MAAkBC,OAAOC,SACzB,qBAAGF,MAAkBC,OAAOC,QAC7CP,EAAO,GAELA,EAAO,KAGNA,EAAO,IAIP,qBAAGK,MAAkBC,OAAOE,aAgC5BC,EA5BA,WACb,IAAMC,EAAO,OAab,OACE,YAACR,EAAD,KACE,uBACE,mCACCQ,EAAKC,KAAKC,aAAaC,OAAOC,MAEjC,uBACE,iCACA,qBAAsB,oBAAXC,QAA0BA,OAAOC,SAASC,S,4rBClCrDjB,EAAWC,IAAXD,OAEFkB,EAAUf,IAAOgB,QAAV,IACGnB,EAAO,GAGAA,EAAO,KAIf,qBAAGK,MAAkBC,OAAOc,aAKrCC,EAAYlB,IAAOmB,IAAV,IAGCtB,EAAO,IAMjBuB,EAAUpB,IAAOC,IAAV,KACG,SAACoB,GAAD,OAAWA,EAAMC,SAGpB,qBAAGpB,MAAkBC,OAAOE,aAIjC,SAACgB,GAAD,OAAYA,EAAMC,MAAQ,gBAAkB,kBAoDvCC,GAFEC,UA1CU,SAAC,GAAoC,IAAlCjB,EAAkC,EAAlCA,KAAMkB,EAA4B,EAA5BA,YAAaZ,EAAe,EAAfA,SACvCa,EAAOnB,EAAKoB,eACZC,EAAYrB,EAAKC,KAAKC,aAAaoB,MACjCC,EAAmBL,EAAnBK,SAAUC,EAASN,EAATM,KAElB,OACE,YAAC,IAAD,CAAQlB,SAAUA,EAAUgB,MAAOD,GACjC,YAAC,IAAD,CAAKC,MAAOH,EAAKM,YAAYH,MAAOI,YAAaP,EAAKM,YAAYC,aAAeP,EAAKQ,UACtF,YAACnB,EAAD,KACE,0BACE,sBAAKW,EAAKM,YAAYH,OACtB,qBAAIH,EAAKM,YAAYG,OAEvB,uBAASC,wBAAyB,CAAEC,OAAQX,EAAKY,SAEnD,YAAC,EAAD,MACA,YAACpB,EAAD,KACE,uBACGY,GACC,YAACV,EAAD,KACE,YAAC,OAAD,CAAMmB,GAAIT,EAASU,OAAOC,KAAMC,IAAI,QACjCZ,EAASE,YAAYH,OAExB,mCAIN,uBACGE,GACC,YAACX,EAAD,CAASE,MAAM,SACb,YAAC,OAAD,CAAMiB,GAAIR,EAAKS,OAAOC,KAAMC,IAAI,QAC7BX,EAAKC,YAAYH,OAEpB,sCAWW,e","file":"component---src-templates-blog-post-tsx-b6600bf4b2262d12d39f.js","sourcesContent":["import React from \"react\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\nimport styled from \"../utils/theme\";\r\nimport typography from \"../utils/typography\";\r\nconst { rhythm } = typography;\r\nconst Container = styled.div`\r\n  border-top: 1px solid ${({ theme }) => theme.colors.muted};\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.muted};\r\n  margin: ${rhythm(1)} 0;\r\n  & > div {\r\n    margin: ${rhythm(0.75)} 0;\r\n    & > span {\r\n      display: inline-block;\r\n      width: ${rhythm(3)};\r\n    }\r\n    & > a {\r\n      cursor: pointer;\r\n      color: ${({ theme }) => theme.colors.highlight}\r\n    }\r\n  }\r\n`;\r\nconst Author = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <span>Author:</span>\r\n        {data.site.siteMetadata.author.name}\r\n      </div>\r\n      <div>\r\n        <span>Link:</span>\r\n        <a>{typeof window !== \"undefined\" && window.location.href}</a>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Author;\r\n","import React, { useEffect } from \"react\";\nimport { graphql, Link } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport typography from \"../utils/typography\";\nimport styled from \"../utils/theme\";\nimport Author from \"../components/author\";\n\nconst { rhythm } = typography;\n\nconst Article = styled.article`\n  margin-top: ${rhythm(1)};\n  & header {\n    h1 {\n      margin-bottom: ${rhythm(0.1)};\n    }\n    p {\n      font-size: 75%;\n      color: ${({ theme }) => theme.colors.secondary};\n    }\n  }\n`;\n\nconst BottomNav = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  margin-top: ${rhythm(1)};\n  & a {\n    text-decoration: none;\n  }\n`;\n\nconst NavItem = styled.div<{ align?: \"right\" }>`\n  text-align: ${(props) => props.align};\n  font-size: 120%;\n  & a {\n    color: ${({ theme }) => theme.colors.highlight};\n    transition: 300ms;\n    left: 0;\n    &:hover {\n      ${(props) => (props.align ? \"padding-right\" : \"padding-left\")}: 10px\n    }\n  }\n  & small {\n    display: block;\n    opacity: 0.4;\n  }\n`;\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark;\n  const siteTitle = data.site.siteMetadata.title;\n  const { previous, next } = pageContext;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title={post.frontmatter.title} description={post.frontmatter.description || post.excerpt} />\n      <Article>\n        <header>\n          <h1>{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\n      </Article>\n      <Author />\n      <BottomNav>\n        <div>\n          {previous && (\n            <NavItem>\n              <Link to={previous.fields.slug} rel=\"prev\">\n                {previous.frontmatter.title}\n              </Link>\n              <small>Prev</small>\n            </NavItem>\n          )}\n        </div>\n        <div>\n          {next && (\n            <NavItem align=\"right\">\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title}\n              </Link>\n              <small>Next</small>\n            </NavItem>\n          )}\n        </div>\n      </BottomNav>\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"YYYY MMMM DD\")\n        description\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}