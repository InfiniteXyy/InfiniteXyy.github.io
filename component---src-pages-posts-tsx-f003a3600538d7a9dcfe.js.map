{"version":3,"sources":["webpack:///./src/pages/posts.tsx"],"names":["rhythm","typography","Container","Article","Year","Posts","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","lastYear","map","node","frontmatter","fields","slug","currentYear","date","split","trim","Fragment","key","to","query"],"mappings":"mPAQQA,EAAWC,IAAXD,OACFE,EAAY,mBAAH,oBAAG,CAAH,cACCF,EAAO,GADR,KAGTG,EAAU,uBAAH,oBAAG,CAAH,wEAIGH,EAAO,IAJV,IAIkBA,EAAO,GAJzB,+GAkBPI,EAAO,oBAAH,oBAAG,CAAH,+DAISJ,EAAO,IAJhB,KAqCKK,UA/BD,SAAC,GAAuB,IAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACfC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,kBAAkBC,MAEjCC,EAAW,KACf,OACE,YAAC,IAAD,CAAQR,SAAUA,EAAUI,MAAOH,GACjC,YAAC,IAAD,CAAKG,MAAM,UACX,YAACT,EAAD,KACGU,EAAMI,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACNN,EAAQM,EAAKC,YAAYP,OAASM,EAAKE,OAAOC,KAC9CC,EAAcJ,EAAKC,YAAYI,KAAKC,MAAM,KAAK,GAAGC,OACxD,OACE,YAAC,IAAMC,SAAP,CAAgBC,IAAKT,EAAKE,OAAOC,MAC9BC,IAAgBN,IAEbA,EAAWM,EACJ,YAACjB,EAAD,KAAOiB,IAElB,YAAClB,EAAD,KACE,YAAC,OAAD,CAAMwB,GAAIV,EAAKE,OAAOC,MAAOT,GAC7B,yBAAQM,EAAKC,YAAYI,cAYlC,IAAMM,EAAQ","file":"component---src-pages-posts-tsx-f003a3600538d7a9dcfe.js","sourcesContent":["import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport typography from \"../utils/typography\";\nimport styled from \"@emotion/styled\";\n\nconst { rhythm } = typography;\nconst Container = styled.div`\n  margin-top: ${rhythm(1)};\n`;\nconst Article = styled.article`\n  display: flex;\n  justify-content: space-between;\n  font-size: 120%;\n  margin: 0 0 ${rhythm(0.6)} ${rhythm(2)};\n  & a {\n    color: unset;\n    text-decoration: none;\n    &:hover {\n      color: cornflowerblue;\n    }\n  }\n  & small {\n    opacity: 0.4;\n    font-weight: bold;\n  }\n`;\n\nconst Year = styled.code`\n  font-weight: bold;\n  font-size: 120%;\n  display: block;\n  margin-bottom: ${rhythm(0.6)};\n`;\nconst Posts = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title;\n  const posts = data.allMarkdownRemark.edges;\n\n  let lastYear = null;\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Posts\" />\n      <Container>\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug;\n          const currentYear = node.frontmatter.date.split(\",\")[1].trim();\n          return (\n            <React.Fragment key={node.fields.slug}>\n              {currentYear !== lastYear &&\n                (() => {\n                  lastYear = currentYear;\n                  return <Year>{currentYear}</Year>;\n                })()}\n              <Article>\n                <Link to={node.fields.slug}>{title}</Link>\n                <small>{node.frontmatter.date}</small>\n              </Article>\n            </React.Fragment>\n          );\n        })}\n      </Container>\n    </Layout>\n  );\n};\n\nexport default Posts;\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}